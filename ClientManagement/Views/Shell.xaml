<Window x:Class="ClientManagement.Views.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClientManagement.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="450" Width="800">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Width" Value="75" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Margin" Value="5" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="DatePickerTextBoxStyle">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="{x:Null}" />
        </Style>
        <Style TargetType="{x:Type DatePickerTextBox}" >
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox x:Name="PART_TextBox"
                                 Text="{Binding Path=SelectedDate, StringFormat='dd-MMM-yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" Style="{StaticResource DatePickerTextBoxStyle}" >
                        </TextBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <ListView x:Name="lvClients" ItemsSource="{Binding ClientsList}" Grid.Column="0" Grid.Row="0" Grid.RowSpan="5">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                           CommandParameter="{Binding ElementName=lvClients, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding Name}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="Name" Click="ColumnHeader_Click">Name</GridViewColumnHeader>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Width="100">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="BirthDate" Click="ColumnHeader_Click">Birth Date</GridViewColumnHeader>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=BirthDate, StringFormat='dd.MM.yyyy'}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <Label Grid.Row="1" Grid.Column="1" Content="Name:" HorizontalContentAlignment="Right" Margin="10,0,0,10" />
        <TextBox Name="tbName"
                 Grid.Row="1" Grid.Column="2"
                 Text="{Binding SelectedClient.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding CanEdit}"
                 Margin="0,0,20,10">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="2" Grid.Column="1" Content="Birth Date:" HorizontalContentAlignment="Right" Margin="10,0,0,10" />
        <DatePicker Name="dpBirthDate" Grid.Column="2" Margin="0,0,20,0" Grid.Row="2"
                    SelectedDate="{Binding Path=SelectedClient.BirthDate,  ValidatesOnDataErrors=True, StringFormat='dd.MM.yyyy', Mode=TwoWay}"
                    IsEnabled="{Binding CanEdit}">
            <DatePicker.Style>
                <Style TargetType="DatePicker">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DatePicker.Style>
        </DatePicker>

        <StackPanel Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="10,0,0,0">
            <Button Command="{Binding SaveCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Content" Value="Edit" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbName}"
                                               Value="False" />
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=dpBirthDate}"
                                               Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding CanEdit}" Value="True">
                                <Setter Property="Content" Value="Save" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Delete" Command="{Binding DeleteCommand}" IsEnabled="{Binding CanDelete}" />
            <Button Content="New" Command="{Binding NewCommand}" />
        </StackPanel>

        <!-- <Label Foreground="Red" Content="{Binding ValidationMessage}" Grid.Column="1" Grid.ColumnSpan="2" -->
        <!--        HorizontalAlignment="Left" Margin="10,45,0,61" Grid.Row="3" VerticalAlignment="Center" /> -->
    </Grid>
</Window>